@page "/"
@using System.Timers
@using RockPaperAndScissors.Helper
@implements IDisposable




@if (!string.IsNullOrEmpty(resultMessage))
{
    <h1 class="text-center fw-bold" style="color:@resultMessageColor">@resultMessage</h1>
}
<div class="d-flex justify-content-center mb-4">
    <button class="btn btn-info text-white" @onclick="PlayAgainst">Play Again</button>
</div>

<div style="display:flex; justify-content:center;margin-bottom:20px;">
    <img src="@opponentHand.Image" class="image img-fluid"/>
</div>
<div style="display:flex; justify-content:space-around; ">
    @foreach (var hand in hands)
   {
       <div onclick="@(()=>SelectHand(hand))" class="img-hand" tabindex="0">
             <img src="@hand.Image" class="image img-fluid selectable-image" />
       </div>
     

   }
    
    </div>
  

@code{


    List<Hand> hands = new List<Hand>()
    {
        new Hand{Selection = OptionRPS.Paper,LosesAgainst = OptionRPS.Scissors,WinsAgainst=OptionRPS.Rock,Image = "paper.png"},
        new Hand{Selection = OptionRPS.Rock,LosesAgainst = OptionRPS.Paper,WinsAgainst=OptionRPS.Scissors,Image = "rock.jpg"},
        new Hand{Selection = OptionRPS.Scissors,LosesAgainst = OptionRPS.Rock,WinsAgainst=OptionRPS.Paper,Image = "scissors.png"}
    };
    Timer timer;
    Hand opponentHand;
    string resultMessage = string.Empty;
    string resultMessageColor = string.Empty;
    private bool shouldRender = true;



    protected override void OnInitialized()
    {
        opponentHand = hands[0];
        timer = new Timer();
        timer.Interval = 100;
        timer.Elapsed += TimerOnElapsed;
        timer.Start();

    }
    int IndexOpponentHand = 0;
    private void TimerOnElapsed(Object sender, ElapsedEventArgs e)
    {
        IndexOpponentHand = (IndexOpponentHand + 1) % hands.Count;
        opponentHand = hands[IndexOpponentHand];
        StateHasChanged();
    }

    public void Dispose()
    {
        if(timer != null)
        {
            timer.Dispose();

        }
    }

    private async void SelectHand(Hand hand)
    {
        timer.Stop();
        var result = hand.PlayAgainst(opponentHand);
        StateHasChanged();
        shouldRender = false;
       

        if(result == GameStatus.Victory)
        {
            resultMessage = "ເຈົ້າຊະນະເດີ!";
            resultMessageColor = "green";




        }else if(result == GameStatus.Loss)
        {
            resultMessage = "ໂງ່ ແພ້ວ່ະ!";
            resultMessageColor = "red";



        }
        else
        {
            resultMessage = "ອຸ້ຍ ສະເໝີເສີຍ!";
            resultMessageColor = "black";



        }

    }
    private void PlayAgainst()
    {
        timer.Start();
        shouldRender = true;
        resultMessage = string.Empty;
    }

    protected override bool ShouldRender()
    {
        return shouldRender;
    }

    
}




